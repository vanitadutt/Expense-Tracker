{"ast":null,"code":"var _jsxFileName = \"E:\\\\Vanita\\\\React\\\\React-Tutorial\\\\react-complete-guide\\\\01-starting-setup\\\\src\\\\components\\\\ExpenseItem.js\";\n// Importing corresponding css file\nimport './ExpenseItem.css'; //A Component in React is just a JavaScript function.\n// A special kind of function special regarding what it returns\n// that it does return this JSX code, but other than that,\n// it's just a Java script function.\n//can give any name to function but the convention is to give same name as file name\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseItem() {\n  //Regular JS code\n  const expenseDate = new Date(2022, 2, 28);\n  const expenseTitle = 'Car Insurance';\n  const expenseAmount = 294.67;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: expenseDate.toISOString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: expenseTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"$\", expenseAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n} // To use this component everywhere need to EXPORT the function\n\n\n_c = ExpenseItem;\nexport default ExpenseItem; // You must only have,\n// one root element here,per return statement\n// or per JSX code snippet, you could say.\n// To give class inside jsx code you need to write className='' instead of class='' bcz class is a reserved name in javascript\n//In {} you can run basic js code in jsx\n//line 19 - Because this being a date objectit can't be output as texts like this.\n// However, we can call to ISO string for example,\n// a built in method available on all date objects to output it as a string\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["ExpenseItem","expenseDate","Date","expenseTitle","expenseAmount","toISOString"],"sources":["E:/Vanita/React/React-Tutorial/react-complete-guide/01-starting-setup/src/components/ExpenseItem.js"],"sourcesContent":["// Importing corresponding css file\r\nimport './ExpenseItem.css';\r\n\r\n//A Component in React is just a JavaScript function.\r\n\r\n// A special kind of function special regarding what it returns\r\n// that it does return this JSX code, but other than that,\r\n// it's just a Java script function.\r\n\r\n//can give any name to function but the convention is to give same name as file name\r\nfunction ExpenseItem() {\r\n    //Regular JS code\r\n    const expenseDate = new Date(2022, 2, 28);\r\n    const expenseTitle = 'Car Insurance';\r\n    const expenseAmount = 294.67;\r\n\r\n  return (\r\n    <div className=\"expense-item\">\r\n    <div>{expenseDate.toISOString()}</div>\r\n      <div className='expense-item__description'>\r\n        <h2>{expenseTitle}</h2>\r\n        <div className='expense-item__price'>${expenseAmount}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// To use this component everywhere need to EXPORT the function\r\nexport default ExpenseItem;\r\n\r\n// You must only have,\r\n// one root element here,per return statement\r\n// or per JSX code snippet, you could say.\r\n\r\n// To give class inside jsx code you need to write className='' instead of class='' bcz class is a reserved name in javascript\r\n\r\n//In {} you can run basic js code in jsx\r\n\r\n//line 19 - Because this being a date objectit can't be output as texts like this.\r\n// However, we can call to ISO string for example,\r\n// a built in method available on all date objects to output it as a string"],"mappings":";AAAA;AACA,OAAO,mBAAP,C,CAEA;AAEA;AACA;AACA;AAEA;;;;AACA,SAASA,WAAT,GAAuB;EACnB;EACA,MAAMC,WAAW,GAAG,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAApB;EACA,MAAMC,YAAY,GAAG,eAArB;EACA,MAAMC,aAAa,GAAG,MAAtB;EAEF,oBACE;IAAK,SAAS,EAAC,cAAf;IAAA,wBACA;MAAA,UAAMH,WAAW,CAACI,WAAZ;IAAN;MAAA;MAAA;MAAA;IAAA,QADA,eAEE;MAAK,SAAS,EAAC,2BAAf;MAAA,wBACE;QAAA,UAAKF;MAAL;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,qBAAf;QAAA,gBAAuCC,aAAvC;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,C,CAED;;;KAjBSJ,W;AAkBT,eAAeA,WAAf,C,CAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module"}