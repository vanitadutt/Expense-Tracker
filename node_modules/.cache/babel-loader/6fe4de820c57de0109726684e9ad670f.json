{"ast":null,"code":"var _jsxFileName = \"E:\\\\Vanita\\\\React\\\\React-Tutorial\\\\react-complete-guide\\\\01-starting-setup\\\\src\\\\App.js\";\n// Import ExpenseItem component\nimport ExpenseItem from \"./components/ExpenseItem\"; // holds function called App which is exported at the end \n// we are returing html code inside js file which is due to JSX feature\n// JSX stands for Javascript XML - this is the code which is transformed behind the scenes in react\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const expenses = [{}];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Let's get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App; //We can make our components reusable by using parameters and a concept called props in React. \n// Like we reuse the code in JS via functions having arguments.\n// And just as HTML elements can have attributes,it turns out that with React,\n// our own custom components can also have attributes.\n// There, this concept is just called props instead of attributes.\n//props stands for PROPERTIES. We can set properties of our own custom components\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ExpenseItem","App","expenses"],"sources":["E:/Vanita/React/React-Tutorial/react-complete-guide/01-starting-setup/src/App.js"],"sourcesContent":["// Import ExpenseItem component\nimport ExpenseItem from \"./components/ExpenseItem\";\n\n// holds function called App which is exported at the end \n// we are returing html code inside js file which is due to JSX feature\n// JSX stands for Javascript XML - this is the code which is transformed behind the scenes in react\nfunction App() {\n\n  const expenses = [{\n    \n  }];\n\n  return (\n    <div>\n      <h2>Let's get started!</h2>\n      {/* First letter of component name should be in capitals. This tells React that we want to use this Component which is imported under this name from the expense item file*/}\n      <ExpenseItem></ExpenseItem>\n      <ExpenseItem></ExpenseItem>\n      <ExpenseItem></ExpenseItem>\n\n    </div>\n  );\n}\n\nexport default App;\n\n//We can make our components reusable by using parameters and a concept called props in React. \n// Like we reuse the code in JS via functions having arguments.\n\n// And just as HTML elements can have attributes,it turns out that with React,\n// our own custom components can also have attributes.\n// There, this concept is just called props instead of attributes.\n//props stands for PROPERTIES. We can set properties of our own custom components"],"mappings":";AAAA;AACA,OAAOA,WAAP,MAAwB,0BAAxB,C,CAEA;AACA;AACA;;;;AACA,SAASC,GAAT,GAAe;EAEb,MAAMC,QAAQ,GAAG,CAAC,EAAD,CAAjB;EAIA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;KAhBQD,G;AAkBT,eAAeA,GAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}