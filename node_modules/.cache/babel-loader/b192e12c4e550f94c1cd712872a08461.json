{"ast":null,"code":"var _jsxFileName = \"E:\\\\Vanita\\\\React\\\\React-Tutorial\\\\react-complete-guide\\\\01-starting-setup\\\\src\\\\App.js\";\n// Import ExpenseItem component\nimport ExpenseItem from \"./components/ExpenseItem\"; // holds function called App which is exported at the end\n// we are returing html code inside js file which is due to JSX feature\n// JSX stands for Javascript XML - this is the code which is transformed behind the scenes in react\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const expenses = [{\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14)\n  }, {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  }, {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28)\n  }, {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Let's get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App; //We can make our components reusable by using parameters and a concept called props in React.\n// Like we reuse the code in JS via functions having arguments.\n// And just as HTML elements can have attributes,it turns out that with React,\n// our own custom components can also have attributes.\n// There, this concept is just called props instead of attributes.\n//props stands for PROPERTIES. We can set properties of our own custom components\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ExpenseItem","App","expenses","id","title","amount","date","Date"],"sources":["E:/Vanita/React/React-Tutorial/react-complete-guide/01-starting-setup/src/App.js"],"sourcesContent":["// Import ExpenseItem component\nimport ExpenseItem from \"./components/ExpenseItem\";\n\n// holds function called App which is exported at the end\n// we are returing html code inside js file which is due to JSX feature\n// JSX stands for Javascript XML - this is the code which is transformed behind the scenes in react\nfunction App() {\n  const expenses = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  return (\n    <div>\n      <h2>Let's get started!</h2>\n      {/* First letter of component name should be in capitals. This tells React that we want to use this Component which is imported under this name from the expense item file*/}\n      <ExpenseItem title></ExpenseItem>\n      <ExpenseItem></ExpenseItem>\n      <ExpenseItem></ExpenseItem>\n      <ExpenseItem></ExpenseItem>\n    </div>\n  );\n}\n\nexport default App;\n\n//We can make our components reusable by using parameters and a concept called props in React.\n// Like we reuse the code in JS via functions having arguments.\n\n// And just as HTML elements can have attributes,it turns out that with React,\n// our own custom components can also have attributes.\n// There, this concept is just called props instead of attributes.\n//props stands for PROPERTIES. We can set properties of our own custom components\n"],"mappings":";AAAA;AACA,OAAOA,WAAP,MAAwB,0BAAxB,C,CAEA;AACA;AACA;;;;AACA,SAASC,GAAT,GAAe;EACb,MAAMC,QAAQ,GAAG,CACf;IACEC,EAAE,EAAE,IADN;IAEEC,KAAK,EAAE,cAFT;IAGEC,MAAM,EAAE,KAHV;IAIEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;EAJR,CADe,EAOf;IAAEJ,EAAE,EAAE,IAAN;IAAYC,KAAK,EAAE,QAAnB;IAA6BC,MAAM,EAAE,MAArC;IAA6CC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;EAAnD,CAPe,EAQf;IACEJ,EAAE,EAAE,IADN;IAEEC,KAAK,EAAE,eAFT;IAGEC,MAAM,EAAE,MAHV;IAIEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;EAJR,CARe,EAcf;IACEJ,EAAE,EAAE,IADN;IAEEC,KAAK,EAAE,mBAFT;IAGEC,MAAM,EAAE,GAHV;IAIEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;EAJR,CAde,CAAjB;EAsBA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,WAAD;MAAa,KAAK;IAAlB;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QALF,eAME,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;KAjCQN,G;AAmCT,eAAeA,GAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}