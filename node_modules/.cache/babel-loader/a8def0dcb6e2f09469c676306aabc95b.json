{"ast":null,"code":"var _jsxFileName = \"E:\\\\Vanita\\\\React\\\\React-Tutorial\\\\react-complete-guide\\\\01-starting-setup\\\\src\\\\index.js\";\n// Importing ReactDOM package that is present in package.json as a dependency\nimport ReactDOM from 'react-dom/client';\nimport './index.css'; // importing app.js file, you can omit .js extension\n// here App is a COMPONENT.\n\nimport App from './App'; //calling method of reactDOM i.e createRoot - This creates basically the main entry point,\n// the main hook of the overall user interface you are about to build with React.\n//createRoot method tells React where this React application, this user interface, \n//which you build with React in the end should be placed in the web page that is loaded.\n// This(document.getElementById('root')) is referring to <div id=\"root\"></div> element in \n// index.html present in public folder \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root')); // we can call the render method to tell React what should be \n// rendered in that div that we selected above\n// This (<App />) is JSX syntax here.\n\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 13\n}, this)); // It will be our so-called, root Component,\n// which means it's the main Component being rendered here\n// in our starting file in index JS.","map":{"version":3,"names":["ReactDOM","App","root","createRoot","document","getElementById","render"],"sources":["E:/Vanita/React/React-Tutorial/react-complete-guide/01-starting-setup/src/index.js"],"sourcesContent":["// Importing ReactDOM package that is present in package.json as a dependency\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\n\n// importing app.js file, you can omit .js extension\n// here App is a COMPONENT.\nimport App from './App';\n\n//calling method of reactDOM i.e createRoot - This creates basically the main entry point,\n// the main hook of the overall user interface you are about to build with React.\n\n//createRoot method tells React where this React application, this user interface, \n//which you build with React in the end should be placed in the web page that is loaded.\n\n// This(document.getElementById('root')) is referring to <div id=\"root\"></div> element in \n// index.html present in public folder \nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n// we can call the render method to tell React what should be \n// rendered in that div that we selected above\n// This (<App />) is JSX syntax here.\nroot.render(<App />);\n// It will be our so-called, root Component,\n// which means it's the main Component being rendered here\n// in our starting file in index JS.\n"],"mappings":";AAAA;AACA,OAAOA,QAAP,MAAqB,kBAArB;AAEA,OAAO,aAAP,C,CAEA;AACA;;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAEA;AACA;AAEA;AACA;AAEA;AACA;;;AACA,MAAMC,IAAI,GAAGF,QAAQ,CAACG,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb,C,CAEA;AACA;AACA;;AACAH,IAAI,CAACI,MAAL,eAAY,QAAC,GAAD;EAAA;EAAA;EAAA;AAAA,QAAZ,E,CACA;AACA;AACA"},"metadata":{},"sourceType":"module"}