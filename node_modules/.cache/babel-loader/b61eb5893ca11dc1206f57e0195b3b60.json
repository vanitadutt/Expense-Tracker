{"ast":null,"code":"var _jsxFileName = \"E:\\\\Vanita\\\\React\\\\React-Tutorial\\\\react-complete-guide\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseChart = props => {\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); //starting at 0  => Jan is 0\n\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n};\n\n_c = ExpenseChart;\nexport default ExpenseChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["React","Chart","ExpenseChart","props","chartDataPoints","label","value","expense","expenses","expenseMonth","date","getMonth","amount"],"sources":["E:/Vanita/React/React-Tutorial/react-complete-guide/01-starting-setup/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenseChart = (props) => {\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value:0},\r\n        {label: 'Feb', value:0},\r\n        {label: 'Mar', value:0},\r\n        {label: 'Apr', value:0},\r\n        {label: 'May', value:0},\r\n        {label: 'Jun', value:0},\r\n        {label: 'Jul', value:0},\r\n        {label: 'Aug', value:0},\r\n        {label: 'Sep', value:0},\r\n        {label: 'Oct', value:0},\r\n        {label: 'Nov', value:0},\r\n        {label: 'Dec', value:0},\r\n\r\n    ];\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth(); //starting at 0  => Jan is 0\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n}\r\n\r\nexport default ExpenseChart;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAC5B,MAAMC,eAAe,GAAG,CACpB;IAACC,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAC;EAArB,CADoB,EAEpB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAC;EAArB,CAFoB,EAGpB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAC;EAArB,CAHoB,EAIpB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAC;EAArB,CAJoB,EAKpB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAC;EAArB,CALoB,EAMpB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAC;EAArB,CANoB,EAOpB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAC;EAArB,CAPoB,EAQpB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAC;EAArB,CARoB,EASpB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAC;EAArB,CAToB,EAUpB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAC;EAArB,CAVoB,EAWpB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAC;EAArB,CAXoB,EAYpB;IAACD,KAAK,EAAE,KAAR;IAAeC,KAAK,EAAC;EAArB,CAZoB,CAAxB;;EAgBA,KAAI,MAAMC,OAAV,IAAqBJ,KAAK,CAACK,QAA3B,EAAoC;IAChC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAR,CAAaC,QAAb,EAArB,CADgC,CACc;;IAC9CP,eAAe,CAACK,YAAD,CAAf,CAA8BH,KAA9B,IAAuCC,OAAO,CAACK,MAA/C;EACH;;EAED,oBAAO,QAAC,KAAD;IAAO,UAAU,EAAER;EAAnB;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAvBD;;KAAMF,Y;AAyBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}